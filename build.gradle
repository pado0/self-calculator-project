plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.asciidoctor.convert' version '1.5.6'    // asciidoc파일을 변환해주고, Build폴더에 복사해주는 플러그인
}

group = 'com.pado'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

asciidoctor {
	dependsOn test    // gradle build 시 test -> asciidoctor 순으로 수행
}

bootJar {
	dependsOn asciidoctor    // gradle build 시 asciidoctor 순으로 수행
	from("${asciidoctor.outputDir}/html5") {    // gradle build 시 ./build/asciidoc/html5/ 에 html 파일생성
		into 'static/docs'                        // html 파일이 jar 안의 /static/docs/ 폴더로 복사됨
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'mysql:mysql-connector-java'


	// restdocs-mockmvc의 testCompile 구성 -> mockMvc를 사용해서 snippets 조각들을 뽑아낼 수 있게 된다.
	// MockMvc 대신 WebTestClient을 사용하려면 spring-restdocs-webtestclient 추가
	// MockMvc 대신 REST Assured를 사용하려면 spring-restdocs-restassured 를 추가
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	useJUnitPlatform()
}

